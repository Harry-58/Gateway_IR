; PlatformIO Project Configuration File ä
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; https://docs.platformio.org/en/latest/projectconf.html

[platformio]
default_envs =  esp32

[env]
;global gültig   aber nur wenn nicht lokal überschrieben !
;			     wenn auch lokale "build_flags" benötigt werden, müssen die globalen "build_flags" eingebunden werden  (build_flags = ${env.build_flags}  )
monitor_speed = 115200
;monitor_speed = 57600
;https://docs.platformio.org/en/latest/projectconf/section_env_monitor.html#projectconf-monitor-filters
;https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#cmd-device-monitor-filters
monitor_filters =  default,  time, send_on_enter

;Verhindert Reset des Moduls wenn SerialMonitor gestartet wird
monitor_dtr = 0
monitor_rts = 0
build_type = release          ; release,  debug      https://docs.platformio.org/en/latest/projectconf/build_configurations.html


lib_ldf_mode = chain+
;lib_ldf_mode = deep+

;;http://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-flags
;;https://dokk.org/documentation/platformio/v3.3.0/projectconf/
build_flags =
  -I E:/PlatformIO/_myLibs
  -I $PROJECT_DIR/include
  -D BAUD=${env.monitor_speed}
  -D ProjektName=""
  -D VERSION='"V1.0"'

  -D IR_SEND_PIN=33


  -D WLAN_SSID='"wlanSSID"'
  -D WLAN_PASS='"wlanPass"'

  -D WLAN_AP_PASS='"wlanApPass"'

  -D MQTT_HOST='"mqttHostIP"'
  -D MQTT_USER='"mqttUser"'
  -D MQTT_PASS='"mqttPass"'



  ; -D FLAG1='"f1"'
  ; -D FLAG2=1

;  -D WLAN_SSID='"${sysenv.Zpar1}"'
;  -D WLAN_PASS='"${sysenv.Zpar2}"'
;  -D MQTT_HOST='"${sysenv.Zpar3}"'
;  -D MQTT_USER='"${sysenv.Zpar4}"'
;  -D MQTT_PASS='"${sysenv.Zpar5}"'

lib_extra_dirs =
     E:/PlatformIO/_myLibs
     E:/PlatformIO/_stdLibs

lib_deps =
   z3t0/IRremote @ 2.8.2

;https://docs.platformio.org/en/latest/projectconf/section_env_advanced.html
;https://docs.platformio.org/en/latest/projectconf/advanced_scripting.html#projectconf-advanced-scripting
extra_scripts =
 # pre:./scripts/extra_script1.py
  post:E:/PlatformIO/_scripts/set_defines.py



[env:esp32]
platform = espressif32
; https://docs.platformio.org/en/latest/platforms/espressif32.html#boards
;board = esp32dev
board = wemos_d1_mini32
framework = arduino
board_build.f_cpu = 240000000L
upload_speed = 921600

monitor_filters = ${env.monitor_filters}, esp32_exception_decoder
#upload_protocol = espota
#upload_port = 192.168.178.26
#upload_flags =
#   --auth=${sysenv.OTApw}

[env:esp32-ota]
platform = espressif32
board =  wemos_d1_mini32
framework = arduino

upload_speed = 921600


;board_build.partitions = no_ota.csv    ;weil mit BLE Platz im Speicher sonst nicht reicht
                                       ; https://docs.platformio.org/en/latest/platforms/espressif32.html#partition-tables

;https://docs.platformio.org/en/latest/platforms/espressif32.html#over-the-air-ota-update
upload_protocol = espota
upload_port = 192.168.188.23
#upload_port = 192.168.178.56
upload_flags =
   --auth=${sysenv.OTApw}


[env:esp8266]
platform = espressif8266
; https://community.platformio.org/t/how-to-fix-isr-not-in-iram/8031
;https://github.com/esp8266/Arduino/issues/6127
; Interruptroutien muss void ICACHE_RAM_ATTR vorangestellt werden

; https://docs.platformio.org/en/latest/platforms/espressif8266.html#boards
;board = esp12e
board = d1_mini
framework = arduino

board_build.f_cpu = 80000000L
upload_speed = 921600

monitor_filters = ${env.monitor_filters}, esp8266_exception_decode
